/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        if(nums==null){
			 return null;
		}
        int length = nums.length;
        TreeNode root = null;
        if(length==1){
            root = new TreeNode(nums[0]);
        }else if(length>1){
            root = new TreeNode(nums[length/2]);
            root.left = sortedArrayToBST(getSubLeft(nums,length/2));
            root.right = sortedArrayToBST(getSubRight(nums,length/2));
        }
        return root;
    }
    
    public int[] getSubLeft(int[] nums,int middle){
        if(middle==0){
            return null;
        }
        int[] reslut = new int[middle];
        for(int i = 0;i<middle;i++){
            reslut[i] = nums[i];
        }
        return reslut;
    }
    public int[] getSubRight(int[] nums,int middle){
        int length = nums.length;
        if(middle==length-1){
            return null;
        }
        int[] result = new int[length-middle-1];
        for(int i = middle+1;i<length;i++){
            result[i-middle-1] = nums[i];
        }
        return result;
    }
}
